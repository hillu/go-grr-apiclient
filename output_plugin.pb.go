// Code generated by protoc-gen-go.
// source: output_plugin.proto
// DO NOT EDIT!

package apiclient

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OutputPluginBatchProcessingStatus_Status int32

const (
	OutputPluginBatchProcessingStatus_SUCCESS OutputPluginBatchProcessingStatus_Status = 0
	OutputPluginBatchProcessingStatus_ERROR   OutputPluginBatchProcessingStatus_Status = 1
)

var OutputPluginBatchProcessingStatus_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
}
var OutputPluginBatchProcessingStatus_Status_value = map[string]int32{
	"SUCCESS": 0,
	"ERROR":   1,
}

func (x OutputPluginBatchProcessingStatus_Status) Enum() *OutputPluginBatchProcessingStatus_Status {
	p := new(OutputPluginBatchProcessingStatus_Status)
	*p = x
	return p
}
func (x OutputPluginBatchProcessingStatus_Status) String() string {
	return proto.EnumName(OutputPluginBatchProcessingStatus_Status_name, int32(x))
}
func (x *OutputPluginBatchProcessingStatus_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OutputPluginBatchProcessingStatus_Status_value, data, "OutputPluginBatchProcessingStatus_Status")
	if err != nil {
		return err
	}
	*x = OutputPluginBatchProcessingStatus_Status(value)
	return nil
}
func (OutputPluginBatchProcessingStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor13, []int{1, 0}
}

type OutputPluginVerificationResult_Status int32

const (
	OutputPluginVerificationResult_N_A     OutputPluginVerificationResult_Status = 0
	OutputPluginVerificationResult_SUCCESS OutputPluginVerificationResult_Status = 1
	OutputPluginVerificationResult_WARNING OutputPluginVerificationResult_Status = 2
	OutputPluginVerificationResult_FAILURE OutputPluginVerificationResult_Status = 3
)

var OutputPluginVerificationResult_Status_name = map[int32]string{
	0: "N_A",
	1: "SUCCESS",
	2: "WARNING",
	3: "FAILURE",
}
var OutputPluginVerificationResult_Status_value = map[string]int32{
	"N_A":     0,
	"SUCCESS": 1,
	"WARNING": 2,
	"FAILURE": 3,
}

func (x OutputPluginVerificationResult_Status) Enum() *OutputPluginVerificationResult_Status {
	p := new(OutputPluginVerificationResult_Status)
	*p = x
	return p
}
func (x OutputPluginVerificationResult_Status) String() string {
	return proto.EnumName(OutputPluginVerificationResult_Status_name, int32(x))
}
func (x *OutputPluginVerificationResult_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OutputPluginVerificationResult_Status_value, data, "OutputPluginVerificationResult_Status")
	if err != nil {
		return err
	}
	*x = OutputPluginVerificationResult_Status(value)
	return nil
}
func (OutputPluginVerificationResult_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor13, []int{2, 0}
}

type OutputPluginDescriptor struct {
	PluginName       *string   `protobuf:"bytes,1,opt,name=plugin_name,json=pluginName" json:"plugin_name,omitempty"`
	PluginArgs       *AnyValue `protobuf:"bytes,2,opt,name=plugin_args,json=pluginArgs" json:"plugin_args,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *OutputPluginDescriptor) Reset()                    { *m = OutputPluginDescriptor{} }
func (m *OutputPluginDescriptor) String() string            { return proto.CompactTextString(m) }
func (*OutputPluginDescriptor) ProtoMessage()               {}
func (*OutputPluginDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *OutputPluginDescriptor) GetPluginName() string {
	if m != nil && m.PluginName != nil {
		return *m.PluginName
	}
	return ""
}

func (m *OutputPluginDescriptor) GetPluginArgs() *AnyValue {
	if m != nil {
		return m.PluginArgs
	}
	return nil
}

// Next id: 7
type OutputPluginBatchProcessingStatus struct {
	Status           *OutputPluginBatchProcessingStatus_Status `protobuf:"varint,1,opt,name=status,enum=OutputPluginBatchProcessingStatus_Status,def=0" json:"status,omitempty"`
	PluginDescriptor *OutputPluginDescriptor                   `protobuf:"bytes,6,opt,name=plugin_descriptor,json=pluginDescriptor" json:"plugin_descriptor,omitempty"`
	Summary          *string                                   `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	BatchIndex       *uint64                                   `protobuf:"varint,4,opt,name=batch_index,json=batchIndex" json:"batch_index,omitempty"`
	BatchSize        *uint64                                   `protobuf:"varint,5,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *OutputPluginBatchProcessingStatus) Reset()         { *m = OutputPluginBatchProcessingStatus{} }
func (m *OutputPluginBatchProcessingStatus) String() string { return proto.CompactTextString(m) }
func (*OutputPluginBatchProcessingStatus) ProtoMessage()    {}
func (*OutputPluginBatchProcessingStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor13, []int{1}
}

const Default_OutputPluginBatchProcessingStatus_Status OutputPluginBatchProcessingStatus_Status = OutputPluginBatchProcessingStatus_SUCCESS

func (m *OutputPluginBatchProcessingStatus) GetStatus() OutputPluginBatchProcessingStatus_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_OutputPluginBatchProcessingStatus_Status
}

func (m *OutputPluginBatchProcessingStatus) GetPluginDescriptor() *OutputPluginDescriptor {
	if m != nil {
		return m.PluginDescriptor
	}
	return nil
}

func (m *OutputPluginBatchProcessingStatus) GetSummary() string {
	if m != nil && m.Summary != nil {
		return *m.Summary
	}
	return ""
}

func (m *OutputPluginBatchProcessingStatus) GetBatchIndex() uint64 {
	if m != nil && m.BatchIndex != nil {
		return *m.BatchIndex
	}
	return 0
}

func (m *OutputPluginBatchProcessingStatus) GetBatchSize() uint64 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

type OutputPluginVerificationResult struct {
	PluginId         *string                                `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId" json:"plugin_id,omitempty"`
	PluginDescriptor *OutputPluginDescriptor                `protobuf:"bytes,2,opt,name=plugin_descriptor,json=pluginDescriptor" json:"plugin_descriptor,omitempty"`
	Status           *OutputPluginVerificationResult_Status `protobuf:"varint,3,opt,name=status,enum=OutputPluginVerificationResult_Status" json:"status,omitempty"`
	StatusMessage    *string                                `protobuf:"bytes,4,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
	Timestamp        *uint64                                `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *OutputPluginVerificationResult) Reset()                    { *m = OutputPluginVerificationResult{} }
func (m *OutputPluginVerificationResult) String() string            { return proto.CompactTextString(m) }
func (*OutputPluginVerificationResult) ProtoMessage()               {}
func (*OutputPluginVerificationResult) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *OutputPluginVerificationResult) GetPluginId() string {
	if m != nil && m.PluginId != nil {
		return *m.PluginId
	}
	return ""
}

func (m *OutputPluginVerificationResult) GetPluginDescriptor() *OutputPluginDescriptor {
	if m != nil {
		return m.PluginDescriptor
	}
	return nil
}

func (m *OutputPluginVerificationResult) GetStatus() OutputPluginVerificationResult_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return OutputPluginVerificationResult_N_A
}

func (m *OutputPluginVerificationResult) GetStatusMessage() string {
	if m != nil && m.StatusMessage != nil {
		return *m.StatusMessage
	}
	return ""
}

func (m *OutputPluginVerificationResult) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type OutputPluginVerificationResultsList struct {
	Results          []*OutputPluginVerificationResult `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *OutputPluginVerificationResultsList) Reset()         { *m = OutputPluginVerificationResultsList{} }
func (m *OutputPluginVerificationResultsList) String() string { return proto.CompactTextString(m) }
func (*OutputPluginVerificationResultsList) ProtoMessage()    {}
func (*OutputPluginVerificationResultsList) Descriptor() ([]byte, []int) {
	return fileDescriptor13, []int{3}
}

func (m *OutputPluginVerificationResultsList) GetResults() []*OutputPluginVerificationResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type EmailOutputPluginArgs struct {
	EmailAddress     *string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	EmailsLimit      *uint64 `protobuf:"varint,2,opt,name=emails_limit,json=emailsLimit,def=100" json:"emails_limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EmailOutputPluginArgs) Reset()                    { *m = EmailOutputPluginArgs{} }
func (m *EmailOutputPluginArgs) String() string            { return proto.CompactTextString(m) }
func (*EmailOutputPluginArgs) ProtoMessage()               {}
func (*EmailOutputPluginArgs) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{4} }

const Default_EmailOutputPluginArgs_EmailsLimit uint64 = 100

func (m *EmailOutputPluginArgs) GetEmailAddress() string {
	if m != nil && m.EmailAddress != nil {
		return *m.EmailAddress
	}
	return ""
}

func (m *EmailOutputPluginArgs) GetEmailsLimit() uint64 {
	if m != nil && m.EmailsLimit != nil {
		return *m.EmailsLimit
	}
	return Default_EmailOutputPluginArgs_EmailsLimit
}

type BigQueryOutputPluginArgs struct {
	ExportOptions    *ExportOptions `protobuf:"bytes,2,opt,name=export_options,json=exportOptions" json:"export_options,omitempty"`
	ConvertValues    *bool          `protobuf:"varint,3,opt,name=convert_values,json=convertValues,def=1" json:"convert_values,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BigQueryOutputPluginArgs) Reset()                    { *m = BigQueryOutputPluginArgs{} }
func (m *BigQueryOutputPluginArgs) String() string            { return proto.CompactTextString(m) }
func (*BigQueryOutputPluginArgs) ProtoMessage()               {}
func (*BigQueryOutputPluginArgs) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{5} }

const Default_BigQueryOutputPluginArgs_ConvertValues bool = true

func (m *BigQueryOutputPluginArgs) GetExportOptions() *ExportOptions {
	if m != nil {
		return m.ExportOptions
	}
	return nil
}

func (m *BigQueryOutputPluginArgs) GetConvertValues() bool {
	if m != nil && m.ConvertValues != nil {
		return *m.ConvertValues
	}
	return Default_BigQueryOutputPluginArgs_ConvertValues
}

type CSVOutputPluginArgs struct {
	ExportOptions    *ExportOptions `protobuf:"bytes,2,opt,name=export_options,json=exportOptions" json:"export_options,omitempty"`
	ConvertValues    *bool          `protobuf:"varint,3,opt,name=convert_values,json=convertValues,def=1" json:"convert_values,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CSVOutputPluginArgs) Reset()                    { *m = CSVOutputPluginArgs{} }
func (m *CSVOutputPluginArgs) String() string            { return proto.CompactTextString(m) }
func (*CSVOutputPluginArgs) ProtoMessage()               {}
func (*CSVOutputPluginArgs) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{6} }

const Default_CSVOutputPluginArgs_ConvertValues bool = true

func (m *CSVOutputPluginArgs) GetExportOptions() *ExportOptions {
	if m != nil {
		return m.ExportOptions
	}
	return nil
}

func (m *CSVOutputPluginArgs) GetConvertValues() bool {
	if m != nil && m.ConvertValues != nil {
		return *m.ConvertValues
	}
	return Default_CSVOutputPluginArgs_ConvertValues
}

func init() {
	proto.RegisterType((*OutputPluginDescriptor)(nil), "OutputPluginDescriptor")
	proto.RegisterType((*OutputPluginBatchProcessingStatus)(nil), "OutputPluginBatchProcessingStatus")
	proto.RegisterType((*OutputPluginVerificationResult)(nil), "OutputPluginVerificationResult")
	proto.RegisterType((*OutputPluginVerificationResultsList)(nil), "OutputPluginVerificationResultsList")
	proto.RegisterType((*EmailOutputPluginArgs)(nil), "EmailOutputPluginArgs")
	proto.RegisterType((*BigQueryOutputPluginArgs)(nil), "BigQueryOutputPluginArgs")
	proto.RegisterType((*CSVOutputPluginArgs)(nil), "CSVOutputPluginArgs")
	proto.RegisterEnum("OutputPluginBatchProcessingStatus_Status", OutputPluginBatchProcessingStatus_Status_name, OutputPluginBatchProcessingStatus_Status_value)
	proto.RegisterEnum("OutputPluginVerificationResult_Status", OutputPluginVerificationResult_Status_name, OutputPluginVerificationResult_Status_value)
}

func init() { proto.RegisterFile("output_plugin.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x55, 0xcb, 0x72, 0x1b, 0x45,
	0x14, 0xcd, 0x58, 0x8e, 0x1d, 0xb5, 0x62, 0x21, 0xda, 0x05, 0x19, 0x58, 0x84, 0x46, 0x21, 0x8e,
	0x81, 0x64, 0x30, 0x4e, 0x85, 0x87, 0x81, 0x50, 0x92, 0x2d, 0xbb, 0x94, 0xb2, 0x65, 0xd3, 0x72,
	0x1c, 0x76, 0x43, 0x6b, 0xe6, 0x4a, 0xea, 0x30, 0x2f, 0xba, 0x7b, 0x42, 0x94, 0x62, 0x01, 0x5b,
	0xbe, 0x81, 0x2d, 0x3f, 0xc0, 0x37, 0xf0, 0x07, 0x6c, 0x58, 0x43, 0xf1, 0x17, 0x2c, 0xa8, 0x7e,
	0x48, 0x56, 0xd9, 0x2e, 0x67, 0xcf, 0x6a, 0xba, 0x4f, 0xdf, 0x73, 0x5f, 0xe7, 0x4e, 0x37, 0x5a,
	0xcd, 0x4b, 0x55, 0x94, 0x2a, 0x2c, 0x92, 0x72, 0xc4, 0xb3, 0xa0, 0x10, 0xb9, 0xca, 0xdf, 0xbc,
	0x0e, 0xcf, 0x8b, 0x5c, 0x28, 0xb7, 0xab, 0x4b, 0x48, 0x59, 0xa6, 0x78, 0x64, 0xf7, 0xcd, 0x1f,
	0x17, 0xd0, 0xeb, 0x87, 0x86, 0x75, 0x64, 0x48, 0x3b, 0x20, 0x23, 0xc1, 0x0b, 0x95, 0x0b, 0xbc,
	0x87, 0x6a, 0xd6, 0x51, 0x98, 0xb1, 0x14, 0x7c, 0x8f, 0x78, 0xeb, 0xd5, 0xf6, 0xda, 0x5f, 0xff,
	0xfe, 0xfd, 0xbb, 0x47, 0xf0, 0xcd, 0xe3, 0x31, 0x10, 0x8d, 0x93, 0x7c, 0x48, 0xd4, 0x18, 0x88,
	0x0d, 0x4d, 0x5c, 0x68, 0x8a, 0xec, 0xa2, 0xc7, 0x52, 0xc0, 0xbf, 0x78, 0x33, 0x4f, 0x4c, 0x8c,
	0xa4, 0xbf, 0x40, 0xbc, 0xf5, 0xda, 0x66, 0x35, 0x68, 0x65, 0x93, 0x13, 0x96, 0x94, 0xd0, 0x2e,
	0x8c, 0xd3, 0xa7, 0xf8, 0x58, 0x3b, 0x2d, 0x98, 0x60, 0x29, 0x28, 0x10, 0x92, 0x0c, 0x73, 0x41,
	0xd4, 0x98, 0xcb, 0xa9, 0x57, 0x72, 0x50, 0x4a, 0x45, 0x06, 0x40, 0x58, 0x46, 0x78, 0x26, 0x15,
	0xcb, 0xa2, 0x59, 0x7c, 0x9d, 0x4b, 0xec, 0x0c, 0xef, 0x48, 0xa2, 0x03, 0x85, 0x6a, 0x52, 0x40,
	0xf0, 0x1e, 0xde, 0x03, 0x57, 0x5c, 0x4b, 0x8c, 0xe4, 0x76, 0xc2, 0xa4, 0x9c, 0xa6, 0xa7, 0x81,
	0xe6, 0xaf, 0x8b, 0xe8, 0xed, 0xf9, 0x16, 0xb4, 0x99, 0x8a, 0xc6, 0x47, 0x22, 0x8f, 0x40, 0x4a,
	0x9e, 0x8d, 0xfa, 0x8a, 0xa9, 0x52, 0xe2, 0x9f, 0x3c, 0xb4, 0x24, 0xcd, 0xd2, 0x74, 0xa2, 0xbe,
	0xf9, 0x6e, 0xf0, 0x52, 0x52, 0x60, 0x3f, 0x5b, 0xcb, 0xfd, 0xc7, 0xdb, 0xdb, 0x9d, 0x7e, 0xbf,
	0xfd, 0xc0, 0x14, 0xfa, 0x01, 0xbe, 0xf7, 0x84, 0x49, 0x5b, 0xd9, 0x40, 0xf3, 0x88, 0x2c, 0x23,
	0x4d, 0x1c, 0x96, 0x49, 0x32, 0x21, 0x85, 0xf5, 0x02, 0x31, 0xc9, 0x05, 0xc9, 0x72, 0xf5, 0x25,
	0x75, 0x81, 0xf1, 0xcf, 0x1e, 0x7a, 0xd5, 0x35, 0x32, 0x9e, 0xe9, 0xe4, 0x2f, 0x99, 0x76, 0xde,
	0x08, 0x2e, 0x96, 0xb1, 0xbd, 0x63, 0x62, 0x3e, 0xc4, 0x9f, 0x9f, 0x62, 0x17, 0x6a, 0x46, 0x04,
	0xc8, 0x22, 0xcf, 0x24, 0x1f, 0x24, 0x70, 0xda, 0x79, 0x01, 0xb2, 0x4c, 0x54, 0x40, 0x1b, 0xc5,
	0xd9, 0xf1, 0xd8, 0x44, 0xcb, 0xb2, 0x4c, 0x53, 0x26, 0x26, 0x7e, 0xc5, 0x8c, 0x86, 0x6f, 0x02,
	0x61, 0xdc, 0xe8, 0x5b, 0x98, 0xa4, 0x20, 0x25, 0x1b, 0x41, 0x40, 0xa7, 0x86, 0xf8, 0x00, 0xd5,
	0x4c, 0xc1, 0x21, 0xcf, 0x62, 0x78, 0xee, 0x2f, 0x12, 0x6f, 0x7d, 0xb1, 0x7d, 0xd7, 0xf0, 0xd6,
	0xf0, 0x3b, 0xbd, 0x32, 0x1d, 0xc0, 0x2c, 0x39, 0xdb, 0x99, 0x01, 0xf0, 0x6c, 0x74, 0xda, 0x92,
	0x80, 0x22, 0x83, 0x77, 0x35, 0x1f, 0x3f, 0x42, 0x76, 0x17, 0x4a, 0xfe, 0x02, 0xfc, 0xab, 0xc6,
	0xdb, 0xfb, 0xc6, 0xdb, 0x6d, 0x7c, 0xab, 0xcf, 0x5f, 0xc0, 0x59, 0x5f, 0xea, 0x8c, 0xb3, 0xaa,
	0x39, 0xd0, 0x96, 0x4d, 0x82, 0x96, 0x9c, 0xd2, 0x35, 0x34, 0xd5, 0xab, 0x71, 0x05, 0x57, 0xd1,
	0xd5, 0x0e, 0xa5, 0x87, 0xb4, 0xe1, 0x35, 0xff, 0xa9, 0xa0, 0x9b, 0xf3, 0x3d, 0x3e, 0x01, 0xc1,
	0x87, 0x3c, 0x62, 0x8a, 0xe7, 0x19, 0x35, 0x6d, 0xc2, 0x5f, 0xa3, 0xaa, 0xd3, 0x87, 0xc7, 0xee,
	0x87, 0xf9, 0xcc, 0xe4, 0xf3, 0x00, 0xdf, 0xef, 0x2b, 0xa1, 0xa3, 0xf3, 0x18, 0x32, 0xc5, 0x87,
	0x13, 0xbd, 0x3e, 0xaf, 0x81, 0x2d, 0x37, 0x1a, 0x43, 0xf4, 0xad, 0xce, 0xef, 0x9a, 0x85, 0xbb,
	0x31, 0xfe, 0xe1, 0x22, 0xe5, 0x17, 0x2e, 0x57, 0xfe, 0x23, 0x13, 0x7a, 0x03, 0x07, 0xe7, 0x95,
	0x77, 0xe1, 0xd4, 0x98, 0xa9, 0x3b, 0xf2, 0x6c, 0xd4, 0xf3, 0x5a, 0x3f, 0x9c, 0xcd, 0x7e, 0xc5,
	0xcc, 0xfe, 0x5a, 0x70, 0x79, 0x23, 0xdc, 0xe0, 0xcf, 0x06, 0xf7, 0x36, 0xaa, 0xdb, 0x55, 0xe8,
	0x66, 0xc2, 0x48, 0x5f, 0xa5, 0x2b, 0x16, 0x3d, 0xb0, 0x20, 0x7e, 0x84, 0xaa, 0x8a, 0xa7, 0x20,
	0x15, 0x4b, 0x0b, 0x27, 0xa7, 0x1b, 0x0e, 0x54, 0xa3, 0x3b, 0xbb, 0x3b, 0x4c, 0x81, 0x3e, 0xc7,
	0x37, 0x8e, 0xa7, 0x56, 0xd3, 0x7a, 0x4c, 0xee, 0x01, 0x3d, 0xa5, 0x37, 0x3f, 0x99, 0xe9, 0xb9,
	0x8c, 0x2a, 0xbd, 0xb0, 0xd5, 0xb8, 0x32, 0x2f, 0xac, 0xa7, 0x37, 0x4f, 0x5a, 0xb4, 0xd7, 0xed,
	0xed, 0x35, 0x16, 0xf4, 0x66, 0xb7, 0xd5, 0xdd, 0x7f, 0x4c, 0x3b, 0x8d, 0x4a, 0xf3, 0x1b, 0x74,
	0xeb, 0xf2, 0xea, 0xe4, 0x3e, 0x97, 0x0a, 0x7f, 0x8a, 0x96, 0xed, 0xcf, 0xa1, 0x2f, 0x84, 0xca,
	0x7a, 0x6d, 0xf3, 0xad, 0x97, 0x34, 0x85, 0x4e, 0xed, 0x9b, 0xbf, 0x79, 0xe8, 0xb5, 0x4e, 0xca,
	0x78, 0x32, 0x4f, 0xd0, 0x77, 0x11, 0xfe, 0x0e, 0xad, 0x80, 0x3e, 0x08, 0x59, 0x1c, 0x0b, 0x90,
	0xd2, 0x0d, 0xd1, 0xbe, 0xe9, 0xc2, 0x2e, 0xc2, 0x3b, 0x79, 0xca, 0x78, 0x66, 0xb8, 0x2d, 0x6b,
	0x81, 0x37, 0xf4, 0xa5, 0x69, 0x48, 0xc4, 0x91, 0x8c, 0xac, 0xd3, 0xbf, 0x4f, 0x92, 0xef, 0x79,
	0x92, 0xe8, 0x4b, 0x53, 0x42, 0xa6, 0x88, 0xca, 0x03, 0x7a, 0x1d, 0xe6, 0xf9, 0x6b, 0xc8, 0xee,
	0x65, 0x98, 0xf0, 0x94, 0x2b, 0x33, 0x54, 0x8b, 0x5b, 0x95, 0x0f, 0x37, 0x36, 0x68, 0xcd, 0x1e,
	0xec, 0x6b, 0xbc, 0xf9, 0xa7, 0x87, 0xfc, 0x36, 0x1f, 0x7d, 0x55, 0x82, 0x98, 0x9c, 0xcb, 0xfb,
	0x08, 0xd5, 0xed, 0x33, 0x13, 0xe6, 0x85, 0xae, 0x78, 0x7a, 0xc9, 0xd7, 0x83, 0x8e, 0x81, 0x0f,
	0x2d, 0xda, 0x7e, 0xc3, 0x14, 0xb2, 0x8a, 0x5f, 0xb1, 0x30, 0x71, 0xd6, 0x81, 0xef, 0xd1, 0x15,
	0x98, 0xb7, 0xc4, 0x4f, 0x51, 0x3d, 0xca, 0xb3, 0x67, 0x20, 0x54, 0xf8, 0x4c, 0x3f, 0x12, 0x76,
	0xf4, 0xae, 0x6d, 0x2d, 0x2a, 0x51, 0x42, 0xfb, 0x0b, 0xe3, 0xe7, 0x63, 0x7c, 0xbf, 0x3b, 0x24,
	0x1a, 0xb8, 0x4b, 0x9c, 0x31, 0xb1, 0xc6, 0xe6, 0x02, 0xb3, 0x0e, 0xef, 0x0d, 0x05, 0x87, 0x2c,
	0x4e, 0x26, 0x1a, 0x4b, 0x99, 0x0a, 0xfc, 0x05, 0xba, 0xe2, 0xac, 0xcd, 0xf3, 0x23, 0x9b, 0x7f,
	0x78, 0x68, 0x75, 0xbb, 0x7f, 0xf2, 0xff, 0xaa, 0xea, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a,
	0x18, 0x29, 0x34, 0x0e, 0x08, 0x00, 0x00,
}
