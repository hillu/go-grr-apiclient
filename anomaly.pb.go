// Code generated by protoc-gen-go.
// source: anomaly.proto
// DO NOT EDIT!

package apiclient

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Anomaly_AnomalyLevel int32

const (
	Anomaly_UNKNOWN_ANOMALY_LEVEL Anomaly_AnomalyLevel = 0
	Anomaly_VERY_LOW              Anomaly_AnomalyLevel = 1
	Anomaly_LOW                   Anomaly_AnomalyLevel = 2
	Anomaly_MEDIUM                Anomaly_AnomalyLevel = 3
	Anomaly_HIGH                  Anomaly_AnomalyLevel = 4
	Anomaly_VERY_HIGH             Anomaly_AnomalyLevel = 5
)

var Anomaly_AnomalyLevel_name = map[int32]string{
	0: "UNKNOWN_ANOMALY_LEVEL",
	1: "VERY_LOW",
	2: "LOW",
	3: "MEDIUM",
	4: "HIGH",
	5: "VERY_HIGH",
}
var Anomaly_AnomalyLevel_value = map[string]int32{
	"UNKNOWN_ANOMALY_LEVEL": 0,
	"VERY_LOW":              1,
	"LOW":                   2,
	"MEDIUM":                3,
	"HIGH":                  4,
	"VERY_HIGH":             5,
}

func (x Anomaly_AnomalyLevel) Enum() *Anomaly_AnomalyLevel {
	p := new(Anomaly_AnomalyLevel)
	*p = x
	return p
}
func (x Anomaly_AnomalyLevel) String() string {
	return proto.EnumName(Anomaly_AnomalyLevel_name, int32(x))
}
func (x *Anomaly_AnomalyLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Anomaly_AnomalyLevel_value, data, "Anomaly_AnomalyLevel")
	if err != nil {
		return err
	}
	*x = Anomaly_AnomalyLevel(value)
	return nil
}
func (Anomaly_AnomalyLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type Anomaly_AnomalyType int32

const (
	Anomaly_UNKNOWN_ANOMALY_TYPE Anomaly_AnomalyType = 0
	Anomaly_PARSER_ANOMALY       Anomaly_AnomalyType = 1
	Anomaly_ANALYSIS_ANOMALY     Anomaly_AnomalyType = 2
	Anomaly_MANUAL_ANOMALY       Anomaly_AnomalyType = 3
)

var Anomaly_AnomalyType_name = map[int32]string{
	0: "UNKNOWN_ANOMALY_TYPE",
	1: "PARSER_ANOMALY",
	2: "ANALYSIS_ANOMALY",
	3: "MANUAL_ANOMALY",
}
var Anomaly_AnomalyType_value = map[string]int32{
	"UNKNOWN_ANOMALY_TYPE": 0,
	"PARSER_ANOMALY":       1,
	"ANALYSIS_ANOMALY":     2,
	"MANUAL_ANOMALY":       3,
}

func (x Anomaly_AnomalyType) Enum() *Anomaly_AnomalyType {
	p := new(Anomaly_AnomalyType)
	*p = x
	return p
}
func (x Anomaly_AnomalyType) String() string {
	return proto.EnumName(Anomaly_AnomalyType_name, int32(x))
}
func (x *Anomaly_AnomalyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Anomaly_AnomalyType_value, data, "Anomaly_AnomalyType")
	if err != nil {
		return err
	}
	*x = Anomaly_AnomalyType(value)
	return nil
}
func (Anomaly_AnomalyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 1} }

// type?, labels
type Anomaly struct {
	Type               *Anomaly_AnomalyType  `protobuf:"varint,1,opt,name=type,enum=Anomaly_AnomalyType" json:"type,omitempty"`
	Severity           *Anomaly_AnomalyLevel `protobuf:"varint,2,opt,name=severity,enum=Anomaly_AnomalyLevel" json:"severity,omitempty"`
	Confidence         *Anomaly_AnomalyLevel `protobuf:"varint,3,opt,name=confidence,enum=Anomaly_AnomalyLevel" json:"confidence,omitempty"`
	Symptom            *string               `protobuf:"bytes,4,opt,name=symptom" json:"symptom,omitempty"`
	Explanation        *string               `protobuf:"bytes,5,opt,name=explanation" json:"explanation,omitempty"`
	GeneratedBy        *string               `protobuf:"bytes,6,opt,name=generated_by,json=generatedBy" json:"generated_by,omitempty"`
	ReferencePathspec  *PathSpec             `protobuf:"bytes,7,opt,name=reference_pathspec,json=referencePathspec" json:"reference_pathspec,omitempty"`
	AnomalyReferenceId []string              `protobuf:"bytes,8,rep,name=anomaly_reference_id,json=anomalyReferenceId" json:"anomaly_reference_id,omitempty"`
	Finding            []string              `protobuf:"bytes,9,rep,name=finding" json:"finding,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *Anomaly) Reset()                    { *m = Anomaly{} }
func (m *Anomaly) String() string            { return proto.CompactTextString(m) }
func (*Anomaly) ProtoMessage()               {}
func (*Anomaly) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Anomaly) GetType() Anomaly_AnomalyType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Anomaly_UNKNOWN_ANOMALY_TYPE
}

func (m *Anomaly) GetSeverity() Anomaly_AnomalyLevel {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return Anomaly_UNKNOWN_ANOMALY_LEVEL
}

func (m *Anomaly) GetConfidence() Anomaly_AnomalyLevel {
	if m != nil && m.Confidence != nil {
		return *m.Confidence
	}
	return Anomaly_UNKNOWN_ANOMALY_LEVEL
}

func (m *Anomaly) GetSymptom() string {
	if m != nil && m.Symptom != nil {
		return *m.Symptom
	}
	return ""
}

func (m *Anomaly) GetExplanation() string {
	if m != nil && m.Explanation != nil {
		return *m.Explanation
	}
	return ""
}

func (m *Anomaly) GetGeneratedBy() string {
	if m != nil && m.GeneratedBy != nil {
		return *m.GeneratedBy
	}
	return ""
}

func (m *Anomaly) GetReferencePathspec() *PathSpec {
	if m != nil {
		return m.ReferencePathspec
	}
	return nil
}

func (m *Anomaly) GetAnomalyReferenceId() []string {
	if m != nil {
		return m.AnomalyReferenceId
	}
	return nil
}

func (m *Anomaly) GetFinding() []string {
	if m != nil {
		return m.Finding
	}
	return nil
}

func init() {
	proto.RegisterType((*Anomaly)(nil), "Anomaly")
	proto.RegisterEnum("Anomaly_AnomalyLevel", Anomaly_AnomalyLevel_name, Anomaly_AnomalyLevel_value)
	proto.RegisterEnum("Anomaly_AnomalyType", Anomaly_AnomalyType_name, Anomaly_AnomalyType_value)
}

func init() { proto.RegisterFile("anomaly.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 717 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x94, 0x4f, 0x6f, 0xe2, 0x46,
	0x18, 0xc6, 0xe3, 0x40, 0x02, 0x0c, 0x49, 0x44, 0x47, 0x44, 0x72, 0x7b, 0x1a, 0x51, 0x55, 0x42,
	0x6a, 0xe5, 0x2a, 0xe9, 0x21, 0xca, 0xa5, 0xa9, 0x69, 0x69, 0x82, 0x0a, 0x04, 0x99, 0xfc, 0x11,
	0x97, 0x92, 0xb1, 0xfd, 0x1a, 0x26, 0x32, 0x33, 0xd6, 0xcc, 0x40, 0xea, 0x5b, 0x8f, 0x95, 0xfa,
	0xad, 0x56, 0xfb, 0x49, 0x76, 0xbf, 0xc6, 0x1e, 0x56, 0x1e, 0x8c, 0x17, 0xb2, 0xab, 0x3d, 0x31,
	0x33, 0x7e, 0xde, 0xe7, 0xf7, 0xf8, 0x9d, 0xd7, 0xa0, 0x63, 0xca, 0xc5, 0x82, 0xc6, 0xa9, 0x93,
	0x48, 0xa1, 0xc5, 0x77, 0xe8, 0x59, 0xf8, 0x2a, 0x5f, 0x9f, 0x28, 0x58, 0x50, 0xae, 0x59, 0xb0,
	0xde, 0xb7, 0xde, 0xd4, 0x50, 0xc5, 0x5d, 0xab, 0xb1, 0x87, 0xca, 0x3a, 0x4d, 0xc0, 0xb6, 0x88,
	0xd5, 0x3e, 0x39, 0x6f, 0x3a, 0xf9, 0xf9, 0xe6, 0xf7, 0x2e, 0x4d, 0xa0, 0xd3, 0x7e, 0xf7, 0xe1,
	0xfd, 0x5b, 0xab, 0x85, 0x49, 0xb6, 0x23, 0x22, 0x22, 0x39, 0x8a, 0xe8, 0x39, 0x53, 0x44, 0x42,
	0x22, 0x41, 0x01, 0xd7, 0xca, 0xf1, 0x8c, 0x17, 0x8e, 0x51, 0x55, 0xc1, 0x0a, 0x24, 0xd3, 0xa9,
	0xbd, 0x6f, 0x7c, 0x4f, 0x5f, 0xfb, 0xf6, 0x61, 0x05, 0x71, 0xe7, 0xd2, 0x18, 0xff, 0x82, 0xcf,
	0xc6, 0xb9, 0x3c, 0x33, 0xd7, 0x73, 0x28, 0x00, 0x2c, 0x22, 0x4c, 0x13, 0xa6, 0x08, 0x25, 0x5a,
	0x2e, 0x81, 0x24, 0x42, 0x31, 0xcd, 0x56, 0xe0, 0x78, 0x05, 0x01, 0x73, 0x84, 0x02, 0xc1, 0x23,
	0x16, 0x02, 0x0f, 0xc0, 0x2e, 0x7d, 0x8d, 0x77, 0x61, 0x78, 0x67, 0xf8, 0xe7, 0xdf, 0x8b, 0x02,
	0xa2, 0xe7, 0x54, 0xef, 0x32, 0xbf, 0x40, 0xdb, 0x22, 0xe0, 0x2e, 0xaa, 0xa8, 0x74, 0x91, 0x68,
	0xb1, 0xb0, 0xcb, 0xc4, 0x6a, 0xd7, 0x3a, 0x3f, 0x1a, 0xd7, 0x1f, 0xf0, 0xf7, 0x2e, 0x09, 0x41,
	0x05, 0x92, 0x25, 0x9a, 0x09, 0x9e, 0xbd, 0xca, 0x4b, 0xe6, 0x9d, 0xf9, 0x19, 0x6b, 0xb1, 0x54,
	0x8e, 0xb7, 0xa9, 0xc5, 0xff, 0x59, 0xa8, 0x0e, 0xff, 0x24, 0x31, 0xe5, 0x34, 0x93, 0xdb, 0x07,
	0xc6, 0x2b, 0x32, 0x5e, 0x4f, 0xf8, 0xef, 0xcf, 0xbc, 0x12, 0xa1, 0x14, 0xf3, 0x63, 0x20, 0x5b,
	0x45, 0x8a, 0x44, 0x42, 0xbe, 0x6e, 0x18, 0x0d, 0x43, 0x96, 0x3d, 0xa4, 0x31, 0x61, 0x3c, 0x12,
	0x72, 0x61, 0xa4, 0x26, 0xc6, 0x8a, 0xb2, 0x98, 0xfa, 0x31, 0x38, 0xde, 0x36, 0x1a, 0xff, 0x6f,
	0xa1, 0xa3, 0x19, 0x70, 0x90, 0x54, 0x43, 0x38, 0xf5, 0x53, 0xfb, 0xd0, 0x64, 0x99, 0x9b, 0x2c,
	0x3e, 0x7e, 0x1a, 0x6b, 0xc9, 0xf8, 0x2c, 0x0f, 0xe4, 0x67, 0x4b, 0xf3, 0x62, 0x45, 0xc9, 0x76,
	0x82, 0x9f, 0xd6, 0x43, 0xc1, 0x14, 0xe1, 0x19, 0x3a, 0x36, 0x53, 0x02, 0x84, 0xd3, 0xc5, 0x7a,
	0x72, 0x48, 0x42, 0xa5, 0x02, 0x49, 0x84, 0x24, 0x54, 0x6a, 0x16, 0xd1, 0x40, 0x3b, 0x5e, 0xbd,
	0xb0, 0xea, 0xa4, 0xf8, 0x5f, 0x0b, 0x61, 0x09, 0x11, 0xc8, 0xac, 0xdb, 0xd3, 0x84, 0xea, 0xb9,
	0x4a, 0x20, 0xb0, 0x2b, 0xc4, 0x6a, 0xd7, 0xcf, 0x6b, 0xce, 0x88, 0xea, 0xf9, 0x38, 0x81, 0xa0,
	0xf3, 0xa7, 0x89, 0xf7, 0x1b, 0xfe, 0xd5, 0x25, 0x1b, 0x11, 0x49, 0x04, 0xe3, 0x3a, 0x0b, 0xa8,
	0x85, 0xc1, 0x0a, 0xff, 0x19, 0x02, 0x4d, 0x5e, 0xe6, 0x20, 0x61, 0xa7, 0x4f, 0x2f, 0x34, 0xeb,
	0xdd, 0x92, 0x87, 0x8e, 0xf7, 0x4d, 0x01, 0x1b, 0xe5, 0x36, 0x38, 0x45, 0xcd, 0x5c, 0x38, 0xfd,
	0x94, 0x84, 0x85, 0x76, 0x95, 0x94, 0xda, 0xb5, 0xce, 0xb5, 0x01, 0xbb, 0xf8, 0xca, 0x25, 0x6a,
	0xdd, 0x99, 0xa5, 0xca, 0x9a, 0x20, 0x48, 0x21, 0xde, 0xbd, 0x13, 0x6e, 0xb6, 0xf9, 0x24, 0x92,
	0x90, 0x6a, 0xea, 0x53, 0x05, 0x8e, 0x87, 0x73, 0x85, 0xb7, 0x29, 0xeb, 0x85, 0x78, 0x82, 0x2a,
	0x11, 0xe3, 0x21, 0xe3, 0x33, 0xbb, 0x66, 0x68, 0x57, 0x86, 0x76, 0x89, 0x2f, 0x76, 0x6e, 0x21,
	0x59, 0x5f, 0xbf, 0x88, 0x8c, 0x5d, 0x3e, 0xc4, 0x92, 0xcd, 0x66, 0x20, 0xf3, 0xfb, 0xd8, 0x7c,
	0x00, 0xde, 0xc6, 0xaf, 0x05, 0xe8, 0x68, 0xfb, 0x6b, 0xc0, 0xdf, 0xa2, 0xd3, 0xfb, 0xe1, 0x5f,
	0xc3, 0xdb, 0xc7, 0xe1, 0xd4, 0x1d, 0xde, 0x0e, 0xdc, 0xfe, 0x64, 0xda, 0xef, 0x3e, 0x74, 0xfb,
	0x8d, 0x3d, 0x7c, 0x84, 0xaa, 0x0f, 0x5d, 0x6f, 0x32, 0xed, 0xdf, 0x3e, 0x36, 0x2c, 0x5c, 0x41,
	0xa5, 0x6c, 0xb1, 0x8f, 0x11, 0x3a, 0x1c, 0x74, 0xff, 0xe8, 0xdd, 0x0f, 0x1a, 0x25, 0x5c, 0x45,
	0xe5, 0x9b, 0xde, 0xf5, 0x4d, 0xa3, 0x8c, 0x8f, 0x51, 0xcd, 0x88, 0xcd, 0xf6, 0xa0, 0x05, 0xa8,
	0xbe, 0xf5, 0xe7, 0x81, 0x6d, 0xd4, 0x7c, 0x4d, 0xb9, 0x9b, 0x8c, 0xba, 0x8d, 0x3d, 0x8c, 0xd1,
	0xc9, 0xc8, 0xf5, 0xc6, 0x5d, 0x6f, 0xf3, 0xa0, 0x61, 0xe1, 0x26, 0x6a, 0xb8, 0x43, 0xb7, 0x3f,
	0x19, 0xf7, 0xc6, 0xc5, 0xe9, 0x7e, 0xa6, 0x1c, 0xb8, 0xc3, 0x7b, 0xb7, 0x5f, 0x9c, 0x95, 0x3e,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x56, 0xa7, 0x87, 0xf0, 0x04, 0x00, 0x00,
}
